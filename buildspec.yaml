version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2g3u3g4
      #- aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 633025986259.dkr.ecr.us-west-1.amazonaws.com
      #- aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:     
      - echo "Building Maven project..."
      - cd thymeleafExample
      - mvn clean install -DskipTests=true
      - echo "Building Docker image...."
      - cd ..
      - docker build -t $IMAGE_NAME:latest -f Dockerfile .
      - echo "Docker image built"

  post_build:
    commands:
     # - echo "Tagging Docker image..."
     # - docker tag $IMAGE_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
      - docker tag public.ecr.aws/p2g3u3g4/thm-codeb-repo:latest public.ecr.aws/p2g3u3g4/thm-codeb-repo:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Pushing Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
     #- docker push public.ecr.aws/p2g3u3g4/thm-codeb-repo:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Docker image pushed to ECR"
     # - echo "Writing image definitions file..."
     # - printf '[{"name":"demo-apps2","imageUri":"%s"}]' public.ecr.aws/p2g3u3g4/thm-codeb-repo:$CODEBUILD_RESOLVED_SOURCE_VERSION > imagedefinitions.json

#artifacts:
  #files: imagedefinitions.json

cache:
  paths:
    - ~/.m2/repository




#=====================================================================================================================================================================
# version: 0.2

# phases:
#   install:
#     runtime-versions:
#       java: corretto11
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws --version
#       - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#       - REPOSITORY_NAME=my-docker-repo  # Replace with your desired ECR repository name
#       - REPOSITORY_URI=$(aws ecr describe-repositories --repository-names $REPOSITORY_NAME --query "repositories[0].repositoryUri" --output text)
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
#   build:
#     commands:
#       - echo Build started on `date`
#       - echo Building the Docker image...
#       - docker build -t $IMAGE_URI -f Dockerfile .  # Reference the Dockerfile
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing the Docker image to ECR...
#       - docker push $IMAGE_URI
# artifacts:
#   files: '**/*'
