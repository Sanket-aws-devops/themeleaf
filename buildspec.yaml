# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo "Logging in to Amazon ECR..."
#       - ls
#   build:
#     commands:
#       - echo "Building Maven project..."
#       - cd thymeleafExample
#       - mvn clean install -DskipTests=true
#       - echo "building docker image...."
#       - cd ..
#       - ls
#       - pwd
#       - docker build -t thm .
#       - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2g3u3g4

#   post_build:
#     commands:
#       - sudo docker tag thm:latest public.ecr.aws/p2g3u3g4/thm:latest
#       - sudo docker push public.ecr.aws/p2g3u3g4/thm:latest

# cache:
#   paths:
#     - ~/.m2/repository

# artifacts:
#   files: '**/*'




version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2g3u3g4
      #- aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 633025986259.dkr.ecr.us-west-1.amazonaws.com
      #- aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:     
       - echo "Logging in to Amazon ECR..."
        - ls
    build:
      commands:
        - echo "Building Maven project..."
        - cd thymeleafExample
        - mvn clean install -DskipTests=true
        - echo "building docker image...."
        - cd ..
        - ls
        - pwd
        - docker build -t thm .
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2g3u3g4
        #- sudo docker build -t public.ecr.aws/p2g3u3g4/thm-codeb-repo:latest .
        
    post_build:
      commands:
          - sudo docker tag thm:latest public.ecr.aws/p2g3u3g4/thm:latest
          - sudo docker push public.ecr.aws/p2g3u3g4/thm:latest
   cache:
     paths:
       - ~/.m2/repository

  artifacts:
    files: '**/*'




#=====================================================================================================================================================================
# version: 0.2

# phases:
#   install:
#     runtime-versions:
#       java: corretto11
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws --version
#       - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#       - REPOSITORY_NAME=my-docker-repo  # Replace with your desired ECR repository name
#       - REPOSITORY_URI=$(aws ecr describe-repositories --repository-names $REPOSITORY_NAME --query "repositories[0].repositoryUri" --output text)
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
#   build:
#     commands:
#       - echo Build started on `date`
#       - echo Building the Docker image...
#       - docker build -t $IMAGE_URI -f Dockerfile .  # Reference the Dockerfile
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing the Docker image to ECR...
#       - docker push $IMAGE_URI
# artifacts:
#   files: '**/*'
